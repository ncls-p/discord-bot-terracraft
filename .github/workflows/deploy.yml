name: Deploy

on: push

jobs:
    cleanFiles:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Executing remote command
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  port: ${{ secrets.PORT }}
                  key: ${{ secrets.SSHKEY }}
                  script: |
                      if [ -d "/home/blury/bot/discord/discord-bot-terracraft" ]; then
                        rm -rf /home/blury/bot/discord/discord-bot-terracraft
                      fi

    uploadFiles:
        runs-on: ubuntu-latest
        needs: cleanFiles
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Copy repository contents via scp
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  port: ${{ secrets.PORT }}
                  key: ${{ secrets.SSHKEY }}
                  source: "."
                  target: "/home/blury/bot/discord/discord-bot-terracraft"

    buildAndRun:
        needs: uploadFiles
        runs-on: ubuntu-latest
        env:
            DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
            UPTIME_ROBOT_API_KEY: ${{ secrets.UPTIME_ROBOT_API_KEY }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Executing remote command
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  port: ${{ secrets.PORT }}
                  key: ${{ secrets.SSHKEY }}
                  envs: DISCORD_BOT_TOKEN,UPTIME_ROBOT_API_KEY
                  script: |
                      cd /home/blury/bot/discord/discord-bot-terracraft
                      touch .env
                      echo "DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}" >> .env
                      echo "UPTIME_ROBOT_API_KEY=${UPTIME_ROBOT_API_KEY}" >> .env
                      docker-compose down --remove-orphans
                      docker-compose up -d
